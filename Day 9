709. To Lower Case (EASY)

Given a string s, return the string after replacing every uppercase letter with the same lowercase letter.
 
Example 1:
Input: s = "Hello"
Output: "hello"
Example 2:
Input: s = "here"
Output: "here"
Example 3:
Input: s = "LOVELY"
Output: "lovely"
 
Constraints:
1 <= s.length <= 100
s consists of printable ASCII characters.


//Code
char* toLowerCase(char* s) {
    
    for(int i = 0; s[i]!= '\0'; i++)
    {
        if(s[i] >= 'A' && s[i] <= 'Z')
        {
            s[i] = s[i] + 32;
        }
    }
    return s;
}



Time Complexity
The function iterates through each character of the input string s until it reaches the null terminator '\0'. Therefore, the time complexity is O(n), where n is the length of the string.
	Space Complexity
The function operates in-place, meaning it modifies the original string without using any additional significant memory. Thus, the space complexity is O(1), indicating constant space usage.
